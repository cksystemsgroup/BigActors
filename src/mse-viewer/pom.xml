<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
	<modelVersion>4.0.0</modelVersion>
	<groupId>at.uni-salzburg.cs</groupId>
	<artifactId>mse-viewer</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>mse-viewer Tapestry 5 Application</name>
	<dependencies>
		<!-- Too set up an application with a database, change the artifactId below to tapestry-hibernate, and add a dependency 
			on your JDBC driver. You'll also need to add Hibernate configuration files, such as hibernate.cfg.xml. -->
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-core</artifactId>
			<version>${tapestry-release-version}</version>
		</dependency>

		<!-- This adds automatic compression of JavaScript and CSS when in production mode. -->
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-yuicompressor</artifactId>
			<version>${tapestry-release-version}</version>
		</dependency>

		<!-- Uncomment this to add support for file uploads: <dependency> <groupId>org.apache.tapestry</groupId> <artifactId>tapestry-upload</artifactId> 
			<version>${tapestry-release-version}</version> </dependency> -->

		<!-- A dependency on either JUnit or TestNG is required, or the surefire plugin (which runs the tests) will fail, preventing 
			Maven from packaging the WAR. Tapestry includes a large number of testing facilities designed for use with TestNG (http://testng.org/), 
			so it's recommended. -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng-release-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>${easymock-release-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-test</artifactId>
			<version>${tapestry-release-version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Provided by the servlet container, but sometimes referenced in the application code. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-release-version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Provide dependency to the Tapestry javadoc taglet which replaces the Maven component report -->
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-javadoc</artifactId>
			<version>${tapestry-release-version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.trsvax</groupId>
			<artifactId>tapestry-bootstrap</artifactId>
			<version>2.1.6-alpha-2</version>
		</dependency>

		<dependency>
			<groupId>ros.rosjava_core</groupId>
			<artifactId>rosjava</artifactId>
			<version>0.0.6</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>edu.berkeley.eloi</groupId>
			<artifactId>bigraph-visualizer</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
					<optimize>true</optimize>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.14.1</version>
				<configuration>
					<systemPropertyVariables>
						<tapestry.execution-mode>Qa</tapestry.execution-mode>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<id>tomcat-run</id>
						<goals>
							<goal>exec-war-only</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<path>viewer</path>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>1.0</version>
			</extension>
		</extensions>
	</build>

	<properties>
		<tapestry-release-version>5.3.7</tapestry-release-version>
		<servlet-api-release-version>2.5</servlet-api-release-version>
		<testng-release-version>5.14.10</testng-release-version>
		<easymock-release-version>3.0</easymock-release-version>
		<java-version>1.6</java-version>
	</properties>

	<distributionManagement>
		<repository>
			<id>${site.id}</id>
			<name>Inhouse Repository</name>
			<url>${inhouse.maven.repository}</url>
		</repository>
		<snapshotRepository>
			<id>${site.id}</id>
			<name>Snapshot Repository</name>
			<url>${inhouse_snapshot.maven.repository}</url>
		</snapshotRepository>
	</distributionManagement>
</project>
